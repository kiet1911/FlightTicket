@using AirlinesReservationSystem.Helper;
@using AirlinesReservationSystem.Models;

@model AirlinesReservationSystem.Models.FlightSchedule

@{

    var seats = ViewData["seatData"] as List<AirlinesReservationSystem.Models.Seats>;
    int totalSeats = 30;
    int rows = 4; // Số hàng
    int cols = totalSeats / rows; // Số cột
}
<style>
    #customAlert {
        display: none;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: #f44336;
        color: white;
        padding: 20px;
        border-radius: 5px;
        text-align: center;
        z-index: 1000;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
    }
</style>
<div id="customAlert">
    Đây là thông báo sẽ tự động tắt sau 2 giây.
</div>
<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal">&times;</button>
    <h4 class="modal-title"><img src="~/Asset/logo.png" style="height:50px"><span>HN_PQ_200_@DateTimeOffset.Now.ToUnixTimeSeconds()</span></h4>
</div>
<div class="modal-body">
    <div class="form-group">
        <label for="email">Plane: <span>@Html.DisplayFor(modelItem => Model.Plane.name)</span></label>
    </div>

    <div class="form-group">
        <label for="email">Từ:</label>
        <input type="text" class="form-control" value="@Html.DisplayFor(modelItem => Model.AirPort.name)" readonly>
    </div>
    <div class="form-group">
        <label for="email">Đến:</label>
        <input type="text" class="form-control" value="@Html.DisplayFor(modelItem => Model.AirPort1.name)" readonly>
    </div>

    <div class="form-group">
        <label for="email">Thời gian đi:</label>
        <input type="text" class="form-control" id="email" value="@Html.DisplayFor(modelItem => Model.departures_at)" readonly>
    </div>

    <div class="form-group">
        <label for="email">Thời gian đến:</label>
        <input type="text" class="form-control" value="@Html.DisplayFor(modelItem => Model.arrivals_at)" readonly>
    </div>


    <div class="form-group">
        <label for="email">Số lượng:</label>
        <input type="number" min="0" class="form-control" id="numberticket" value="0" readonly>
    </div>

    <div class="form-group">
        <label>Giá : <span name="cost">@MoneyHelper.showVND(Model.cost)</span></label>
    </div>

    @if (seats != null && totalSeats > 0)
    {
        <table border="1" style="width:100%; text-align:center; table-layout: fixed;">
            <thead>
                <tr>
                    <th colspan="@rows">Seats</th> <!-- Header -->
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < rows; i++)  // Vòng lặp tạo các hàng
                {
                    <tr>
                        @for (int j = i; j < totalSeats; j += rows) // Vòng lặp tạo các cột
                        {
                            if (seats[j].isbooked == 0)
                            {
                                <td style="width:50px; height:50px; text-align:center; background-color:green">@seats[j].seat <input type="checkbox" id="@seats[j].seat" value="@seats[j].seat" onclick="seat(this)"> </td>
                                <!-- Thay thế SeatNumber bằng thuộc tính chính xác -->
                            }
                            else
                            {
                                <td style="width: 50px; height: 50px; text-align: center; background-color: red">@seats[j].seat </td>
                            }
                        }
                    </tr>
                }
            </tbody>
        </table> }
    else
    {
        <p>No seats available</p>}

    <div class="form-group">
    </div>

    <div class="form-group">
        <label for="seatlocal">Vị trí ngồi:</label>
        <input type="text" class="form-control" id="seatlocal" readonly>
    </div>

    <div class="panel-body">
        <table class="table">
            <tr>
                <th>
                    Vị trí
                </th>
                <th>
                    Xách tay (Kg)
                </th>
                <th>
                    Kí gửi (Kg)
                </th>
                <th>
                    Giá tiền (1kg = 10.000 VND)
                </th>
            </tr>
            <tbody id="luggageForm">
                @*<tr>
                        <td>
                            ??
                        </td>
                        <td>
                            7
                        </td>
                        <td>
                            <input type="number" id="checkedBaggage" min="0" max="15"><br><br>
                        </td>
                    </tr>*@
            </tbody>
        </table>

    </div>


    @*<div id="luggageForm">
            <h3>Chi Tiết Hành Lý</h3>

            <label for="handLuggage">Hành Lý Xách Tay (kg):</label>
            <input type="number" id="handLuggage" value="7" readonly><br><br>

            <label for="checkedBaggage">Hành Lý Ký Gửi (kg):</label>
            <input type="number" id="checkedBaggage" min="0" max="15"><br><br>


        </div>*@



    <div class="form-group">
        <label for="totalcost">Tổng tiền:</label>
        <label>Giá : <span id="totalcosts"></span></label>
    </div>

    <div class="form-group">
    </div>

    <div class="text-center">
        <button class="btn btn-warning" data-id="@Model.id" style="padding: 10px 50px;"><i class="fa fa-usd" aria-hidden="true"></i> Đặt </button>

    </div>
</div>
<div class="modal-footer">
    <p class="text-center"><b>Note:</b> You must be at the airport 30 minutes before departure time</p>
</div>



<script>
    let selectedSeats = [];
    let rowDataList = [];
    const container = document.getElementById('luggageForm');

    function Baggages(me) {
        var price = 0;
        var trColumn = document.getElementById("baggage-item" + me.id);
        const cell = trColumn.getElementsByTagName("td");
        price = me.value * 10000;
        cell[3].innerText = price.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
        ///xu ly total baggage 



        //price = parseInt(totalcost.innerText.replace(/\./g, "").replace("đ", "").trim()) + (me.value * 10000) ;
        //totalcost.innerHTML = price.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
    }
    function seat(me) {
        var a = document.getElementById(me.id);
        var numberticket = document.getElementById("numberticket");
        var totalcost = document.getElementById("totalcosts");
        var seatlocal = document.getElementById("seatlocal");
        let currentValue = parseInt(numberticket.value);
        var price = 0;
        if (a.checked == true) {
            if (!selectedSeats.includes(a.value)) {
                selectedSeats.push(a.value);
            }
            numberticket.value = currentValue + 1;
            price = ((totalcost.innerText) == "")? (numberticket.value*@Model.cost):(parseInt(totalcost.innerText.replace(/\./g, "").replace("đ", "").trim()) + @Model.cost);
            totalcost.innerHTML = price.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
            seatlocal.value = selectedSeats.join(",");
            const baggageItem = document.createElement('tr');
            baggageItem.id = 'baggage-item' + me.value;
            baggageItem.innerHTML = `
                <td>
                    `+ me.value+`
                </td>
                <td>
                    7
                </td>
                <td>
                    <input type="number" onchange="Baggages(this)"  id="`+me.id+`" value="0" min="0" max="15"><br><br>
                </td>
                <td>
                </td>`   ;
            // Thêm div mới vào container
            container.appendChild(baggageItem);

            console.log(selectedSeats);
            //alert('dang chon');
        }
        else {
            selectedSeats = selectedSeats.filter(seat => seat != a.value);
            numberticket.value = currentValue - 1;
            price =  parseInt(totalcost.innerText.replace(/\./g, "").replace("đ", "").trim()) - @Model.cost;
            totalcost.innerHTML = price.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
            seatlocal.value = selectedSeats.join(",");
            document.getElementById('baggage-item' + me.value).remove();
            console.log(selectedSeats);
            //alert('dang bo');
        }

    }

    function showCustomAlert(message) {
        // Hiển thị custom alert
        let alertBox = document.getElementById("customAlert");
        alertBox.innerText = message;
        alertBox.style.display = "block";

        // Ẩn custom alert sau 2 giây
        setTimeout(function () {
            alertBox.style.display = "none";
        }, 2000);
    }
    function getAllRowData() {
        //Delete old data
        rowDataList = [];
        // Get the tbody element by ID
        const tbody = document.getElementById("luggageForm");

        // Get all <tr> elements within tbody
        const rows = tbody.getElementsByTagName("tr");

        // Loop through each <tr>
        for (let i = 0; i < rows.length; i++) {
            const cells = rows[i].getElementsByTagName("td");

            // Retrieve the text in the first two <td> cells
            const firstCellText = cells[0].innerText;
            const secondCellText = cells[1].innerText;

            // Get the input value in the third <td> cell
            const inputElement = cells[2].querySelector("input");
            const inputValue = inputElement ? inputElement.value : "No value";

            const rowData = {
                seat: firstCellText,
                carryonbag: parseInt(secondCellText),
                signedluggage: parseInt(inputValue)
            };
            rowDataList.push(rowData);
        }
        console.log(rowDataList);
    }
    $(document).on("click", "#detailFlightScheduleModal button", function () {
            getAllRowData();
            var id = $(this).attr("data-id");
            var ticketID = $(this).closest(".modal-content").find(".modal-header h4 span").text();
                var url = "@Url.Action("Pays", "Home")";
                var count = $("#detailFlightScheduleModal input[type=number]").val();
            var SLseats = document.getElementById("seatlocal").value;
            $.ajax({
                url: url,
                type: "post",
                data: {
                    ticketID: ticketID,
                    flight: parseInt(id),
                    amount: parseInt(count),
                    seats: SLseats,
                    rowDataList: JSON.stringify(rowDataList)
                },
                dataType: 'json',
                success: function (response) {
                    if (response.status == "200") {
                        window.location.href = "@Url.Action("PayYourTicket", "Home")";
                    } else {
                        showCustomAlert(response.message);
                    }
                }
            });
        });






</script>





<script>
        @*$(document).on("change", "#detailFlightScheduleModal input[type=number]", function () {
            var price = $(this).val() * @Model.cost;
            $("#detailFlightScheduleModal span[name=cost]").html(price.toLocaleString('vi', { style: 'currency', currency: 'VND' }));
        });*@



</script>